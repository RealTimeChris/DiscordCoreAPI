version: 2.1

jobs:

  Build-DiscordCoreAPI:
    machine:
        image: ubuntu-2204:2022.04.1
    resource_class: large
    steps:
      - checkout
      - run:
           name: Download and install vcpkg as well as other dependencies.
           command: sudo apt-get install nasm && 
                    sudo git clone https://github.com/Microsoft/vcpkg --depth=1 &&
                    sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test && 
                    sudo apt install -y g++-11 &&
                    cd vcpkg &&
                    sudo ./bootstrap-vcpkg.sh

      - run:
          name: Copy over the current portfile.
          command: sudo git config --global user.email "40668522+RealTimeChris@users.noreply.github.com" &&
                   sudo git config --global user.name "realtimechris" &&
                   sudo git clone https://realtimechris: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@github.com/realtimechris/DiscordCoreAPI ./DiscordCoreAPI --depth=1

      - run:
         name: Construct the original portfile.
         command: cd DiscordCoreAPI &&
                  sudo bash -c "cat ./github/Raw-Files/Top-Of-Portfile.cmake >> ./github/Raw-Files/Portfile-The-First.cmake" &&
                  sudo git rev-parse HEAD | sudo tee ./github/Raw-Files/Portfile-The-First.cmake -a &&
                  sudo bash -c "cat ./github/Raw-Files/Middle-Of-Portfile.cmake >> ./github/Raw-Files/Portfile-The-First.cmake" &&
                  sudo bash -c "echo $'0\n' >> ./github/Raw-Files/Portfile-The-First.cmake" &&
                  sudo bash -c "cat ./github/Raw-Files/Bottom-Of-Portfile.cmake >> ./github/Raw-Files/Portfile-The-First.cmake" &&
                  sudo cat ./github/Raw-Files/Portfile-The-First.cmake &&

      - run:
         name: Update the portfile.
         command: sudo bash -c "cat ./DiscordCoreAPI/.github/Raw-Files/portfile-second-half.cmake >> /home/ubuntu/Vcpkg/ports/discordcoreapi/portfile-first-half-new.cmake" &&
                  sudo cp -v -R ./DiscordCoreAPI/Vcpkg/* /home/ubuntu/Vcpkg &&
                  sudo cp -v -R /home/ubuntu/Vcpkg/ports/discordcoreapi/portfile-first-half-new.cmake /home/ubuntu/Vcpkg/ports/discordcoreapi/portfile.cmake &&
                  sudo git config --global --add safe.directory /home/circleci/project/DiscordCoreAPI &&
                  sudo cat /home/ubuntu/Vcpkg/ports/discordcoreapi/portfile.cmake &&
                  sudo /home/ubuntu/Vcpkg/vcpkg install discordcoreapi:x64-linux | sudo tee InstallOutput.txt || true

      - run:
         name:  Update the portfile and download/install the library.
         command: sudo sed -i '/Actual hash/,$!d' InstallOutput.txt &&
                  sudo sed -i 's/^.....................//' InstallOutput.txt &&
                  sudo sed -i '2,250d' InstallOutput.txt &&
                  sudo truncate -s -3 InstallOutput.txt &&
                  sudo sed -i '12,25d' /home/ubuntu/Vcpkg/ports/discordcoreapi/portfile-first-half-new.cmake &&
                  cat  /home/ubuntu/Vcpkg/ports/discordcoreapi/portfile-first-half-new.cmake &&
                  sudo truncate -s -54 /home/ubuntu/Vcpkg/ports/discordcoreapi/portfile-first-half-new.cmake &&
                  cat  /home/ubuntu/Vcpkg/ports/discordcoreapi/portfile-first-half-new.cmake &&
                  sudo bash -c "echo $'\n         SHA512 ' >> /home/ubuntu/Vcpkg/ports/discordcoreapi/portfile-first-half-new.cmake"  &&
                  sudo bash -c "cat InstallOutput.txt >> /home/ubuntu/Vcpkg/ports/discordcoreapi/portfile-first-half-new.cmake"  &&
                  sudo sed -i '1,2d' newFile.txt &&                  
                  sudo bash -c "cat newFile.txt >> /home/ubuntu/Vcpkg/ports/discordcoreapi/portfile-first-half-new.cmake"  &&
                  sudo touch ./DiscordCoreAPI/Vcpkg/ports/discordcoreapi/portfile.cmake &&
                  sudo cp -v -R /home/ubuntu/Vcpkg/ports/discordcoreapi/portfile-first-half-new.cmake /home/ubuntu/Vcpkg/ports/discordcoreapi/portfile.cmake &&
                  sudo cp -v -R /home/ubuntu/Vcpkg/ports/discordcoreapi/portfile-first-half-new.cmake ./DiscordCoreAPI/Vcpkg/ports/discordcoreapi/portfile.cmake &&
                  cd ./DiscordCoreAPI &&
                  sudo cat newFile.txt &&
                  sudo git add . &&
                  sudo git commit -m "Updates!" &&
                  sudo git config pull.rebase false &&
                  sudo git pull &&
                  sudo git push origin main &&
                  sudo /home/ubuntu/Vcpkg/vcpkg install discordcoreapi:x64-linux || true
             
      - run:
         name: Update the portfile.
         command: cd vcpkg &&
                  sudo /home/ubuntu/Vcpkg/vcpkg install discordcoreapi:x64-linux || true
                
      - run:
         name: Download and install a template-bot.
         command: sudo git clone https://github.com/RealTimeChris/Bot-Template-For-DiscordCoreAPI --depth=1 &&
                  cd Bot-Template-For-DiscordCoreAPI &&
                  sudo apt-get install -y ninja-build &&
                  sudo cmake -S . --preset Linux-Release &&
                  sudo cmake --build --preset Linux-Release &&
                  sudo cmake --install ./Build/Release &&
                  cd "Output Files/Release" &&
                  sudo ./DiscordCoreAPI-Bot-Cpp

  Build-Documentation:
    machine:
        image: ubuntu-2204:2022.04.1
    resource_class: large
    steps:
      - checkout
    
      - add_ssh_keys:
         fingerprints:
             e1:e3:0b:e4:82:48:0e:95:26:dd:aa:25:49:93:92:e7
      
      - run:
           name: Store the public SSH key.
           command: echo $AWS_KEY >> PUBLIC_KEY &&
                    sudo cp ./PUBLIC_KEY /root/.ssh/id_rsa

      - run:
           name: Download and install Doxygen, along with its dependencies.
           command: sudo apt-get update &&
                    sudo git clone https://github.com/doxygen/doxygen &&
                    sudo apt-get install bison &&
                    sudo apt-get install flex &&
                    cd doxygen &&
                    sudo mkdir build &&
                    sudo cmake -G "Unix Makefiles" &&
                    sudo make &&
                    sudo make install &&
                    sudo apt-get install graphviz &&
                    sudo apt-get install openssh-client

      - run:
          name: Collect the original Repo for the docs.
          command: sudo git config --global user.email "40668522+RealTimeChris@users.noreply.github.com" &&
                   sudo git config --global user.name "realtimechris" &&
                   sudo git clone https://realtimechris:${PERSONAL_ACCESS_TOKEN}@github.com/realtimechris/DiscordCoreAPI-Docs --depth=1

      - run:
          name: Collect the documentation and generate it.
          command: sudo git clone https://github.com/RealTimeChris/DiscordCoreAPI --depth=1 &&
                   cd DiscordCoreAPI/Documentation/Doxygen && 
                   sudo doxygen || true

      - run:
          name: Commit and push the docs to the repo.
          command: cd DiscordCoreAPI-Docs && 
                   sudo git add . && 
                   sudo git commit -m "Updates!" && 
                   sudo git push origin main || true

      - run:
          name: Clone the data over to the web server.
          command: ssh -o StrictHostKeyChecking=no ubuntu@ec2-3-144-188-157.us-east-2.compute.amazonaws.com 
                   "cd /var/www && sudo rm -rf discordcoreapi && sudo git clone https://github.com/RealTimeChris/DiscordCoreAPI-Docs --depth=1 ./discordcoreapi"

workflows:
  DiscordCoreAPI:
    jobs:
      - Build-Documentation
      - Build-DiscordCoreAPI
