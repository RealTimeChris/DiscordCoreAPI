@PACKAGE_INIT@ 
include(CMakeFindDependencyMacro)
@DiscordCoreAPI_FIND_DEPENDENCY_CALLS@
set_and_check(DISCORDCOREAPI_HEADER_DIR "@DISCORDCOREAPI_INCLUDE_DIR@")
set_and_check(DISCORDCOREAPI_SOURCE_DIR "@DISCORDCOREAPI_SOURCE_DIR@")
include ( ${CMAKE_CURRENT_LIST_DIR}/DiscordCoreAPITargets.cmake )
set(LIBRARY_NAMES "@LIBRARY_NAMES@")
set(RELEASE_LIBRARIES "@RELEASE_LIBRARIES@")
set(DEBUG_LIBRARIES "@DEBUG_LIBRARIES@")
set(RELEASE_RUNTIMES "@RELEASE_RUNTIMES@")
set(DEBUG_RUNTIMES "@DEBUG_RUNTIMES@")

foreach(LIBRARY_NAME ${LIBRARY_NAMES})
	list(FIND LIBRARY_NAMES "${LIBRARY_NAME}" THE_INDEX)
	list(GET RELEASE_LIBRARIES "${THE_INDEX}" RELEASE_LIBRARY)
	list(GET DEBUG_LIBRARIES "${THE_INDEX}" DEBUG_LIBRARY)
	list(GET RELEASE_RUNTIMES "${THE_INDEX}" RELEASE_RUNTIME)
	list(GET DEBUG_RUNTIMES "${THE_INDEX}" DEBUG_RUNTIME)
	if (RELEASE_RUNTIME AND DEBUG_RUNTIME)
		set_and_check(DEBUG_RUNTIME_NEW "${DEBUG_RUNTIME}")
		set_and_check(RELEASE_RUNTIME_NEW "${RELEASE_RUNTIME}")
		set_and_check(DEBUG_LIBRARY_NEW "${DEBUG_LIBRARY}")
		set_and_check(RELEASE_LIBRARY_NEW "${RELEASE_LIBRARY}")
		add_library("${LIBRARY_NAME}" SHARED IMPORTED)
		set_target_properties("${LIBRARY_NAME}" PROPERTIES IMPORTED_LOCATION_RELEASE "${RELEASE_RUNTIME_NEW}" IMPORTED_LOCATION_DEBUG "${DEBUG_RUNTIME_NEW}" IMPORTED_IMPLIB_RELEASE "${RELEASE_LIBRARY_NEW}" IMPORTED_IMPLIB_DEBUG "${DEBUG_LIBRARY_NEW}")
	else()
		set_and_check(DEBUG_LIBRARY_NEW "${DEBUG_LIBRARY}")
		set_and_check(RELEASE_LIBRARY_NEW "${RELEASE_LIBRARY}")
		add_library("${LIBRARY_NAME}" STATIC IMPORTED)
		set_target_properties("${LIBRARY_NAME}" PROPERTIES IMPORTED_LOCATION_RELEASE "${RELEASE_LIBRARY_NEW}" IMPORTED_LOCATION_DEBUG "${DEBUG_LIBRARY_NEW}")
	endif()
	target_link_libraries(DiscordCoreAPI::DiscordCoreAPI INTERFACE "${LIBRARY_NAME}")
endforeach()

check_required_components(DiscordCoreAPI)