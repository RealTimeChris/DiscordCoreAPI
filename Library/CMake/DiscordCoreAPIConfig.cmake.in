@PACKAGE_INIT@ 
include(CMakeFindDependencyMacro)
@DiscordCoreAPI_FIND_DEPENDENCY_CALLS@
set_and_check(DISCORDCOREAPI_HEADER_DIR "@DISCORDCOREAPI_INCLUDE_DIR@")
set_and_check(DISCORDCOREAPI_SOURCE_DIR "@DISCORDCOREAPI_SOURCE_DIR@")

include ( ${CMAKE_CURRENT_LIST_DIR}/DiscordCoreAPITargets.cmake )

if (WIN32)
	set_and_check(AVFORMAT_LIBRARY_RELEASE_NEW "@AVFORMAT_LIBRARY_RELEASE@")
	set_and_check(AVFORMAT_LIBRARY_DEBUG_NEW "@AVFORMAT_LIBRARY_DEBUG@")
	if (EXISTS @AVFORMAT_RUNTIME_RELEASE@)
		set_and_check(AVFORMAT_RUNTIME_RELEASE "@AVFORMAT_RUNTIME_RELEASE@")
	endif()
	if (EXISTS @AVFORMAT_RUNTIME_DEBUG@)
		set_and_check(AVFORMAT_RUNTIME_DEBUG "@AVFORMAT_RUNTIME_DEBUG@")
	endif()
	if (AVFORMAT_RUNTIME_RELEASE OR AVFORMAT_RUNTIME_DEBUG)
		add_library(AVFORMAT_LIBRARY SHARED IMPORTED)
		set_target_properties(AVFORMAT_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${AVFORMAT_RUNTIME_RELEASE}" IMPORTED_LOCATION_DEBUG "${AVFORMAT_RUNTIME_DEBUG}" IMPORTED_IMPLIB_RELEASE "${AVFORMAT_LIBRARY_RELEASE_NEW}" IMPORTED_IMPLIB_DEBUG "${AVFORMAT_LIBRARY_DEBUG_NEW}")
	else()
		add_library(AVFORMAT_LIBRARY STATIC IMPORTED)
		set_target_properties(AVFORMAT_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${AVFORMAT_LIBRARY_RELEASE_NEW}" IMPORTED_LOCATION_DEBUG "${AVFORMAT_LIBRARY_DEBUG_NEW}")
	endif()
	target_link_libraries(DiscordCoreAPI::DiscordCoreAPI INTERFACE AVFORMAT_LIBRARY)

	set_and_check(AVCODEC_LIBRARY_RELEASE_NEW "@AVCODEC_LIBRARY_RELEASE@")
	set_and_check(AVCODEC_LIBRARY_DEBUG_NEW "@AVCODEC_LIBRARY_DEBUG@")
	if (EXISTS @AVCODEC_RUNTIME_RELEASE@)
		set_and_check(AVCODEC_RUNTIME_RELEASE "@AVCODEC_RUNTIME_RELEASE@")
	endif()
	if (EXISTS @AVCODEC_RUNTIME_DEBUG@)
		set_and_check(AVCODEC_RUNTIME_DEBUG "@AVCODEC_RUNTIME_DEBUG@")
	endif()
	if (AVCODEC_RUNTIME_RELEASE OR AVCODEC_RUNTIME_DEBUG)
		add_library(AVCODEC_LIBRARY SHARED IMPORTED)
		set_target_properties(AVCODEC_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${AVCODEC_RUNTIME_RELEASE}" IMPORTED_LOCATION_DEBUG "${AVCODEC_RUNTIME_DEBUG}" IMPORTED_IMPLIB_RELEASE "${AVCODEC_LIBRARY_RELEASE_NEW}" IMPORTED_IMPLIB_DEBUG "${AVCODEC_LIBRARY_DEBUG_NEW}")
	else()
		add_library(AVCODEC_LIBRARY STATIC IMPORTED)
		set_target_properties(AVCODEC_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${AVCODEC_LIBRARY_RELEASE_NEW}" IMPORTED_LOCATION_DEBUG "${AVCODEC_LIBRARY_DEBUG_NEW}")
	endif()
	target_link_libraries(DiscordCoreAPI::DiscordCoreAPI INTERFACE AVCODEC_LIBRARY)

	set_and_check(AVUTIL_LIBRARY_RELEASE_NEW "@AVUTIL_LIBRARY_RELEASE@")
	set_and_check(AVUTIL_LIBRARY_DEBUG_NEW "@AVUTIL_LIBRARY_DEBUG@")
	if (EXISTS @AVUTIL_RUNTIME_RELEASE@)
		set_and_check(AVUTIL_RUNTIME_RELEASE "@AVUTIL_RUNTIME_RELEASE@")
	endif()
	if (EXISTS @AVUTIL_RUNTIME_DEBUG@)
		set_and_check(AVUTIL_RUNTIME_DEBUG "@AVUTIL_RUNTIME_DEBUG@")
	endif()
	if (AVUTIL_RUNTIME_RELEASE OR AVUTIL_RUNTIME_DEBUG)
		add_library(AVUTIL_LIBRARY SHARED IMPORTED)
		set_target_properties(AVUTIL_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${AVUTIL_RUNTIME_RELEASE}" IMPORTED_LOCATION_DEBUG "${AVUTIL_RUNTIME_DEBUG}" IMPORTED_IMPLIB_RELEASE "${AVUTIL_LIBRARY_RELEASE_NEW}" IMPORTED_IMPLIB_DEBUG "${AVUTIL_LIBRARY_DEBUG_NEW}")
	else()
		add_library(AVUTIL_LIBRARY STATIC IMPORTED)
		set_target_properties(AVUTIL_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${AVUTIL_LIBRARY_RELEASE_NEW}" IMPORTED_LOCATION_DEBUG "${AVUTIL_LIBRARY_DEBUG_NEW}")
	endif()
	target_link_libraries(DiscordCoreAPI::DiscordCoreAPI INTERFACE AVUTIL_LIBRARY)

	set_and_check(SWRESAMPLE_LIBRARY_RELEASE_NEW "@SWRESAMPLE_LIBRARY_RELEASE@")
	set_and_check(SWRESAMPLE_LIBRARY_DEBUG_NEW "@SWRESAMPLE_LIBRARY_DEBUG@")
	if (EXISTS @SWRESAMPLE_RUNTIME_RELEASE@)
		set_and_check(SWRESAMPLE_RUNTIME_RELEASE "@SWRESAMPLE_RUNTIME_RELEASE@")
	endif()
	if (EXISTS @SWRESAMPLE_RUNTIME_DEBUG@)
		set_and_check(SWRESAMPLE_RUNTIME_DEBUG "@SWRESAMPLE_RUNTIME_DEBUG@")
	endif()
	if (SWRESAMPLE_RUNTIME_RELEASE OR SWRESAMPLE_RUNTIME_DEBUG)
		add_library(SWRESAMPLE_LIBRARY SHARED IMPORTED)
		set_target_properties(SWRESAMPLE_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${SWRESAMPLE_RUNTIME_RELEASE}" IMPORTED_LOCATION_DEBUG "${SWRESAMPLE_RUNTIME_DEBUG}" IMPORTED_IMPLIB_RELEASE "${SWRESAMPLE_LIBRARY_RELEASE_NEW}" IMPORTED_IMPLIB_DEBUG "${SWRESAMPLE_LIBRARY_DEBUG_NEW}")
	else()
		add_library(SWRESAMPLE_LIBRARY STATIC IMPORTED)
		set_target_properties(SWRESAMPLE_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${SWRESAMPLE_LIBRARY_RELEASE_NEW}" IMPORTED_LOCATION_DEBUG "${SWRESAMPLE_LIBRARY_DEBUG_NEW}")
	endif()
	target_link_libraries(DiscordCoreAPI::DiscordCoreAPI INTERFACE SWRESAMPLE_LIBRARY)

	set_and_check(CURL_LIBRARY_RELEASE_NEW "@CURL_LIBRARY_RELEASE@")
	set_and_check(CURL_LIBRARY_DEBUG_NEW "@CURL_LIBRARY_DEBUG@")
	if (EXISTS @CURL_RUNTIME_RELEASE@)
		set_and_check(CURL_RUNTIME_RELEASE "@CURL_RUNTIME_RELEASE@")
	endif()
	if (EXISTS @CURL_RUNTIME_DEBUG@)
		set_and_check(CURL_RUNTIME_DEBUG "@CURL_RUNTIME_DEBUG@")
	endif()
	if (CURL_RUNTIME_RELEASE OR CURL_RUNTIME_DEBUG)
		add_library(CURL_LIBRARY SHARED IMPORTED)
		set_target_properties(CURL_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${CURL_RUNTIME_RELEASE}" IMPORTED_LOCATION_DEBUG "${CURL_RUNTIME_DEBUG}" IMPORTED_IMPLIB_RELEASE "${CURL_LIBRARY_RELEASE_NEW}" IMPORTED_IMPLIB_DEBUG "${CURL_LIBRARY_DEBUG_NEW}")
	else()
		add_library(CURL_LIBRARY STATIC IMPORTED)
		set_target_properties(CURL_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${CURL_LIBRARY_RELEASE_NEW}" IMPORTED_LOCATION_DEBUG "${CURL_LIBRARY_DEBUG_NEW}")
	endif()
	target_link_libraries(DiscordCoreAPI::DiscordCoreAPI INTERFACE CURL_LIBRARY)

	set_and_check(GLIB_LIBRARY_RELEASE_NEW "@GLIB_LIBRARY_RELEASE@")
	set_and_check(GLIB_LIBRARY_DEBUG_NEW "@GLIB_LIBRARY_DEBUG@")
	if (EXISTS @GLIB_RUNTIME_RELEASE@)
		set_and_check(GLIB_RUNTIME_RELEASE "@GLIB_RUNTIME_RELEASE@")
	endif()
	if (EXISTS @GLIB_RUNTIME_DEBUG@)
		set_and_check(GLIB_RUNTIME_DEBUG "@GLIB_RUNTIME_DEBUG@")
	endif()
	if (GLIB_RUNTIME_RELEASE OR GLIB_RUNTIME_DEBUG)
		add_library(GLIB_LIBRARY SHARED IMPORTED)
		set_target_properties(GLIB_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${GLIB_RUNTIME_RELEASE}" IMPORTED_LOCATION_DEBUG "${GLIB_RUNTIME_DEBUG}" IMPORTED_IMPLIB_RELEASE "${GLIB_LIBRARY_RELEASE_NEW}" IMPORTED_IMPLIB_DEBUG "${GLIB_LIBRARY_DEBUG_NEW}")
	else()
		add_library(GLIB_LIBRARY STATIC IMPORTED)
		set_target_properties(GLIB_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${GLIB_LIBRARY_RELEASE_NEW}" IMPORTED_LOCATION_DEBUG "${GLIB_LIBRARY_DEBUG_NEW}")
	endif()
	target_link_libraries(DiscordCoreAPI::DiscordCoreAPI INTERFACE GLIB_LIBRARY)

	if (EXISTS @INTL_LIBRARY_FILE@)
		set_and_check(INTL_LIBRARY_RELEASE_NEW "@INTL_LIBRARY_FILE@")
		set_and_check(INTL_LIBRARY_DEBUG_NEW "@INTL_LIBRARY_FILE@")
	endif()
	if (EXISTS @INTL_RUNTIME_FILE@)
		set_and_check(LIBSSL_RUNTIME_RELEASE "@INTL_RUNTIME_FILE@")
		set_and_check(LIBSSL_RUNTIME_DEBUG "@INTL_RUNTIME_FILE@")
	endif()
	if (INTL_RUNTIME_RELEASE OR INTL_RUNTIME_DEBUG)
		add_library(INTL_LIBRARY SHARED IMPORTED)
		set_target_properties(INTL_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${INTL_RUNTIME_RELEASE}" IMPORTED_LOCATION_DEBUG "${INTL_RUNTIME_DEBUG}" IMPORTED_IMPLIB_RELEASE "${INTL_LIBRARY_RELEASE_NEW}" IMPORTED_IMPLIB_DEBUG "${INTL_LIBRARY_DEBUG_NEW}")
		target_link_libraries(DiscordCoreAPI::DiscordCoreAPI INTERFACE INTL_LIBRARY)
	elseif(INTL_LIBRARY_RELEASE_NEW OR INTL_LIBRARY_DEBUG_NEW)
		add_library(INTL_LIBRARY STATIC IMPORTED)
		set_target_properties(INTL_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${INTL_LIBRARY_RELEASE_NEW}" IMPORTED_LOCATION_DEBUG "${INTL_LIBRARY_DEBUG_NEW}")
		target_link_libraries(DiscordCoreAPI::DiscordCoreAPI INTERFACE INTL_LIBRARY)
	endif()

	set_and_check(LIBSSL_LIBRARY_RELEASE_NEW "@LIBSSL_LIBRARY_RELEASE@")
	set_and_check(LIBSSL_LIBRARY_DEBUG_NEW "@LIBSSL_LIBRARY_DEBUG@")
	if ("@LIBSSL_RUNTIME_RELEASE@")
		set_and_check(LIBSSL_RUNTIME_RELEASE "@LIBSSL_RUNTIME_RELEASE@")
	endif()
	if ("@LIBSSL_RUNTIME_DEBUG@")
		set_and_check(LIBSSL_RUNTIME_DEBUG "@LIBSSL_RUNTIME_DEBUG@")
	endif()
	if (LIBSSL_RUNTIME_RELEASE OR LIBSSL_RUNTIME_DEBUG)
		add_library(LIBSSL_LIBRARY SHARED IMPORTED)
		set_target_properties(LIBSSL_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${LIBSSL_RUNTIME_RELEASE}" IMPORTED_LOCATION_DEBUG "${LIBSSL_RUNTIME_DEBUG}" IMPORTED_IMPLIB_RELEASE "${LIBSSL_LIBRARY_RELEASE_NEW}" IMPORTED_IMPLIB_DEBUG "${LIBSSL_LIBRARY_DEBUG_NEW}")
	else()
		add_library(LIBSSL_LIBRARY STATIC IMPORTED)
		set_target_properties(LIBSSL_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${LIBSSL_LIBRARY_RELEASE_NEW}" IMPORTED_LOCATION_DEBUG "${LIBSSL_LIBRARY_DEBUG_NEW}")
	endif()
	target_link_libraries(DiscordCoreAPI::DiscordCoreAPI INTERFACE LIBSSL_LIBRARY)

	set_and_check(LIBCRYPTO_LIBRARY_RELEASE_NEW "@LIBCRYPTO_LIBRARY_RELEASE@")
	set_and_check(LIBCRYPTO_LIBRARY_DEBUG_NEW "@LIBCRYPTO_LIBRARY_DEBUG@")
	if (EXISTS @LIBCRYPTO_RUNTIME_RELEASE@)
		set_and_check(LIBCRYPTO_RUNTIME_RELEASE "@LIBCRYPTO_RUNTIME_RELEASE@")
	endif()
	if (EXISTS @LIBCRYPTO_RUNTIME_DEBUG@)
		set_and_check(LIBCRYPTO_RUNTIME_DEBUG "@LIBCRYPTO_RUNTIME_DEBUG@")
	endif()
	if (LIBCRYPTO_RUNTIME_RELEASE OR LIBCRYPTO_RUNTIME_DEBUG)
		add_library(LIBCRYPTO_LIBRARY SHARED IMPORTED)
		set_target_properties(LIBCRYPTO_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${LIBCRYPTO_RUNTIME_RELEASE}" IMPORTED_LOCATION_DEBUG "${LIBCRYPTO_RUNTIME_DEBUG}" IMPORTED_IMPLIB_RELEASE "${LIBCRYPTO_LIBRARY_RELEASE_NEW}" IMPORTED_IMPLIB_DEBUG "${LIBCRYPTO_LIBRARY_DEBUG_NEW}")
	else()
		add_library(LIBCRYPTO_LIBRARY STATIC IMPORTED)
		set_target_properties(LIBCRYPTO_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${LIBCRYPTO_LIBRARY_RELEASE_NEW}" IMPORTED_LOCATION_DEBUG "${LIBCRYPTO_LIBRARY_DEBUG_NEW}")
	endif()
	target_link_libraries(DiscordCoreAPI::DiscordCoreAPI INTERFACE LIBCRYPTO_LIBRARY)

	set_and_check(OPUS_LIBRARY_RELEASE_NEW "@OPUS_LIBRARY_RELEASE@")
	set_and_check(OPUS_LIBRARY_DEBUG_NEW "@OPUS_LIBRARY_DEBUG@")
	if (EXISTS @OPUS_RUNTIME_RELEASE@)
		set_and_check(OPUS_RUNTIME_RELEASE "@OPUS_RUNTIME_RELEASE@")
	endif()
	if (EXISTS @OPUS_RUNTIME_DEBUG@)
		set_and_check(OPUS_RUNTIME_DEBUG "@OPUS_RUNTIME_DEBUG@")
	endif()
	if (OPUS_RUNTIME_RELEASE OR OPUS_RUNTIME_DEBUG)
		add_library(OPUS_LIBRARY SHARED IMPORTED)
		set_target_properties(OPUS_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${OPUS_RUNTIME_RELEASE}" IMPORTED_LOCATION_DEBUG "${OPUS_RUNTIME_DEBUG}" IMPORTED_IMPLIB_RELEASE "${OPUS_LIBRARY_RELEASE_NEW}" IMPORTED_IMPLIB_DEBUG "${OPUS_LIBRARY_DEBUG_NEW}")
	else()
		add_library(OPUS_LIBRARY STATIC IMPORTED)
		set_target_properties(OPUS_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${OPUS_LIBRARY_RELEASE_NEW}" IMPORTED_LOCATION_DEBUG "${OPUS_LIBRARY_DEBUG_NEW}")
	endif()
	target_link_libraries(DiscordCoreAPI::DiscordCoreAPI INTERFACE OPUS_LIBRARY)

	set_and_check(SODIUM_LIBRARY_RELEASE_NEW "@SODIUM_LIBRARY_RELEASE@")
	set_and_check(SODIUM_LIBRARY_DEBUG_NEW "@SODIUM_LIBRARY_DEBUG@")
	if (EXISTS @SODIUM_RUNTIME_RELEASE@)
		set_and_check(SODIUM_RUNTIME_RELEASE "@SODIUM_RUNTIME_RELEASE@")
	endif()
	if (EXISTS @SODIUM_RUNTIME_DEBUG@)
		set_and_check(SODIUM_RUNTIME_DEBUG "@SODIUM_RUNTIME_DEBUG@")
	endif()
	if (SODIUM_RUNTIME_RELEASE OR SODIUM_RUNTIME_DEBUG)
		add_library(SODIUM_LIBRARY SHARED IMPORTED)
		set_target_properties(SODIUM_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${SODIUM_RUNTIME_RELEASE}" IMPORTED_LOCATION_DEBUG "${SODIUM_RUNTIME_DEBUG}" IMPORTED_IMPLIB_RELEASE "${SODIUM_LIBRARY_RELEASE_NEW}" IMPORTED_IMPLIB_DEBUG "${SODIUM_LIBRARY_DEBUG_NEW}")
	else()
		add_library(SODIUM_LIBRARY STATIC IMPORTED)
		set_target_properties(SODIUM_LIBRARY PROPERTIES IMPORTED_LOCATION_RELEASE "${SODIUM_LIBRARY_RELEASE_NEW}" IMPORTED_LOCATION_DEBUG "${SODIUM_LIBRARY_DEBUG_NEW}")
	endif()
	target_link_libraries(DiscordCoreAPI::DiscordCoreAPI INTERFACE SODIUM_LIBRARY)
endif()

check_required_components(DiscordCoreAPI)