cmake_minimum_required(VERSION 3.22)
project(discordcoreapi_proj VERSION 1.00 LANGUAGES CXX)
set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/CMake")

#SET THESE VALUES.
set(CURL_INCLUDE_DIR "C:/Users/Chris/Downloads/curlNew/include")
set(CURL_RELEASE_ROOT "C:/Users/Chris/Downloads/curlNew/Build/lib/Release")
set(CURL_DEBUG_ROOT "C:/Users/Chris/Downloads/curlNew/Build/lib/Debug")
set(FFMPEG_INCLUDE_DIR "C:/Users/Chris/Downloads/ffmpeg/include")
set(FFMPEG_RELEASE_ROOT "C:/Users/Chris/Downloads/ffmpeg/lib")
set(FFMPEG_DEBUG_ROOT "C:/Users/Chris/Downloads/ffmpeg/lib")
set(GLIB_INCLUDE_DIR "C:/Users/Chris/Downloads/glib/Prefix")
set(GLIB_RELEASE_ROOT "C:/Users/Chris/Downloads/glib/Prefix/lib")
set(GLIB_DEBUG_ROOT "C:/Users/Chris/Downloads/glib/Prefix/lib")
set(LIBZ_INCLUDE_DIR "C:/Users/Chris/Downloads/glib/Prefix")
set(LIBZ_RELEASE_ROOT "C:/Users/Chris/Downloads/glib/Prefix/lib")
set(LIBZ_DEBUG_ROOT "C:/Users/Chris/Downloads/glib/Prefix/lib")
set(OPENSSL_INCLUDE_DIR "C:/Users/Chris/Downloads/openssl/include")
set(OPENSSL_RELEASE_ROOT "C:/Users/Chris/Downloads/openssl")
set(OPENSSL_DEBUG_ROOT "C:/Users/Chris/Downloads/openssl")
set(OPUS_INCLUDE_DIR "C:/Users/Chris/Downloads/newopus/include")
set(OPUS_RELEASE_ROOT "C:/Users/Chris/Downloads/newopus/Build/Release")
set(OPUS_DEBUG_ROOT "C:/Users/Chris/Downloads/newopus/Build/Debug")
set(SODIUM_INCLUDE_DIR "C:/Users/Chris/Downloads/libsodium/src/libsodium/include")
set(SODIUM_RELEASE_ROOT "C:/Users/Chris/Downloads/libsodium/bin/x64/Release/v143/dynamic")
set(SODIUM_DEBUG_ROOT "C:/Users/Chris/Downloads/libsodium/bin/x64/Debug/v143/dynamic")
set(NLOHMANN_INCLUDE_DIR "C:/Users/Chris/Downloads/json/include")

include(CMakePackageConfigHelpers)
include(GenerateProductVersion)
include(FindCurl)
include(FindFFMPEG)
include(FindGlib)
include(FindIntl)
include(FindLibz)
include(FindOpenSSL)
include(FindOpus)
include(FindSodium)
include(FindNlohmannJson)

set(CMAKE_CONFIGURATION_TYPES "$CACHE{CMAKE_BUILD_TYPE}")

if(NOT _VCPKG_ROOT_DIR)
	set(LINUX_OK TRUE)
	if (UNIX)	
		if (NOT LIBZ_INCLUDE_DIR OR NOT LIBZ_RELEASE_ROOT OR NOT LIBZ_DEBUG_ROOT)
			set(LINUX_OK FALSE)
		endif()
	endif()
	if (NOT CURL_INCLUDE_DIR OR NOT CURL_RELEASE_ROOT OR NOT CURL_DEBUG_ROOT
		OR NOT FFMPEG_INCLUDE_DIR OR NOT FFMPEG_RELEASE_ROOT OR NOT FFMPEG_DEBUG_ROOT OR NOT GLIB_INCLUDE_DIR
		OR NOT GLIB_RELEASE_ROOT OR NOT GLIB_DEBUG_ROOT OR NOT OPENSSL_INCLUDE_DIR OR NOT OPENSSL_RELEASE_ROOT
		OR NOT OPENSSL_DEBUG_ROOT OR NOT OPUS_INCLUDE_DIR OR NOT OPUS_RELEASE_ROOT OR NOT OPUS_DEBUG_ROOT
		OR NOT SODIUM_INCLUDE_DIR OR NOT SODIUM_RELEASE_ROOT OR NOT SODIUM_DEBUG_ROOT OR NOT NLOHMANN_INCLUDE_DIR OR NOT LINUX_OK)
		
		message(FATAL_ERROR "Sorry - but please set the _DEBUG_ROOT, _RELEASE_ROOT AND _INCLUDE_DIR values in CMakeLists.txt!")
	endif()
else()		
	set(VCPKG_BASE_DIR "${_VCPKG_ROOT_DIR}/installed")
	string(TOLOWER "${CMAKE_HOST_SYSTEM_NAME}" OS_NAME)
	set(VCPKG_INSTALLED_DIR "${VCPKG_BASE_DIR}/x64-${OS_NAME}")
	set(CURL_INCLUDE_DIR "${VCPKG_INSTALLED_DIR}/include")
	set(CURL_RELEASE_ROOT "${VCPKG_INSTALLED_DIR}/lib")
	set(CURL_DEBUG_ROOT "${VCPKG_INSTALLED_DIR}/debug/lib")
	set(FFMPEG_INCLUDE_DIR "${VCPKG_INSTALLED_DIR}/include")
	set(FFMPEG_RELEASE_ROOT "${VCPKG_INSTALLED_DIR}/lib")
	set(FFMPEG_DEBUG_ROOT "${VCPKG_INSTALLED_DIR}/debug/lib")
	set(GLIB_INCLUDE_DIR "${VCPKG_INSTALLED_DIR}/include")
	set(GLIB_RELEASE_ROOT "${VCPKG_INSTALLED_DIR}/lib")
	set(GLIB_DEBUG_ROOT "${VCPKG_INSTALLED_DIR}/debug/lib")
	set(LIBZ_INCLUDE_DIR "${VCPKG_INSTALLED_DIR}/include")
	set(LIBZ_RELEASE_ROOT "${VCPKG_INSTALLED_DIR}/lib")
	set(LIBZ_DEBUG_ROOT "${VCPKG_INSTALLED_DIR}/debug/lib")
	set(OPENSSL_INCLUDE_DIR "${VCPKG_INSTALLED_DIR}/include")
	set(OPENSSL_RELEASE_ROOT "${VCPKG_INSTALLED_DIR}/lib")
	set(OPENSSL_DEBUG_ROOT "${VCPKG_INSTALLED_DIR}/debug/lib")
	set(OPUS_INCLUDE_DIR "${VCPKG_INSTALLED_DIR}/include")
	set(OPUS_RELEASE_ROOT "${VCPKG_INSTALLED_DIR}/lib")
	set(OPUS_DEBUG_ROOT "${VCPKG_INSTALLED_DIR}/debug/lib")
	set(SODIUM_INCLUDE_DIR "${VCPKG_INSTALLED_DIR}/include")
	set(SODIUM_RELEASE_ROOT "${VCPKG_INSTALLED_DIR}/lib")
	set(SODIUM_DEBUG_ROOT "${VCPKG_INSTALLED_DIR}/debug/lib")
	set(NLOHMANN_INCLUDE_DIR "${VCPKG_INSTALLED_DIR}/include")
endif()

add_subdirectory(Library)