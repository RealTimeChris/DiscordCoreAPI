# Set these values, if you are not building with VCPKG.
set(CURL_INCLUDE_DIR "C:/Users/Chris/Downloads/curlNew/include")
set(CURL_RELEASE_ROOT "C:/Users/Chris/Downloads/curlNew/Build/lib/Release")
set(CURL_DEBUG_ROOT "C:/Users/Chris/Downloads/curlNew/Build/lib/Debug")
set(FFMPEG_INCLUDE_DIR "C:/Users/Chris/Downloads/ffmpeg/include")
set(FFMPEG_RELEASE_ROOT "C:/Users/Chris/Downloads/ffmpeg/lib")
set(FFMPEG_DEBUG_ROOT "C:/Users/Chris/Downloads/ffmpeg/lib")
set(GLIB_INCLUDE_DIR "C:/Users/Chris/Downloads/glib/Prefix/include")
set(GLIB_RELEASE_ROOT "C:/Users/Chris/Downloads/glib/Prefix/lib")
set(GLIB_DEBUG_ROOT "C:/Users/Chris/Downloads/glib/Prefix/lib")
set(NLOHMANN_INCLUDE_DIR "C:/Users/Chris/Downloads/json/include")
set(OPENSSL_INCLUDE_DIR "C:/Users/Chris/Downloads/openssl/include")
set(OPENSSL_RELEASE_ROOT "C:/Users/Chris/Downloads/openssl")
set(OPENSSL_DEBUG_ROOT "C:/Users/Chris/Downloads/openssl")
set(OPUS_INCLUDE_DIR "C:/Users/Chris/Downloads/newopus/include")
set(OPUS_RELEASE_ROOT "C:/Users/Chris/Downloads/newopus/Build/Release")
set(OPUS_DEBUG_ROOT "C:/Users/Chris/Downloads/newopus/Build/Debug")
set(SODIUM_INCLUDE_DIR "C:/Users/Chris/Downloads/libsodium/src/libsodium/include")
set(SODIUM_RELEASE_ROOT "C:/Users/Chris/Downloads/libsodium/bin/x64/Release/v143/dynamic")
set(SODIUM_DEBUG_ROOT "C:/Users/Chris/Downloads/libsodium/bin/x64/Debug/v143/dynamic")

cmake_minimum_required(VERSION 3.20)
set(PROJECT_NAME "DiscordCoreAPI")
set(LIB_NAME "DiscordCoreAPI")
project("${PROJECT_NAME}" VERSION 1.00 LANGUAGES CXX)
set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/CMake;${CMAKE_SOURCE_DIR}/CMake/Find-Scripts")
set(CMAKE_CONFIGURATION_TYPES "${CMAKE_BUILD_TYPE}")

include(CMakePackageConfigHelpers)
include(GenerateProductVersion)
include(FindCurl)
include(FindFFMPEG)
include(FindGlib)
include(FindIntl)
include(FindLibz)
include(FindNlohmannJson)
include(FindOpenSSL)
include(FindOpus)
include(FindSodium)

if(NOT EXISTS "${_VCPKG_ROOT_DIR}")
	set(LINUX_OK TRUE)
	set(WINDOWS_OK TRUE)
	if (UNIX)
		if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
			set(CMAKE_INSTALL_PREFIX "/usr/local/share/DiscordCoreAPI" CACHE PATH "..." FORCE)
		endif()
		set(LIBZ_INCLUDE_DIR "${CURL_INCLUDE_DIR}")
		set(LIBZ_RELEASE_ROOT "${CURL_RELEASE_ROOT}")
		set(LIBZ_DEBUG_ROOT "${CURL_DEBUG_ROOT}")
		if (NOT EXISTS "${LIBZ_INCLUDE_DIR}" OR NOT EXISTS "${LIBZ_RELEASE_ROOT}" OR NOT EXISTS "${LIBZ_DEBUG_ROOT}")
			set(LINUX_OK FALSE)
		endif()		
	else()
		cmake_path(GET CMAKE_INSTALL_PREFIX ROOT_PATH ROOT_DRIVE)
		if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
			set(CMAKE_INSTALL_PREFIX "${ROOT_DRIVE}users/$ENV{USERNAME}/CMake/DiscordCoreAPI" CACHE PATH "..." FORCE)			
		endif()
		set(INTL_INCLUDE_DIR "${GLIB_INCLUDE_DIR}")
		set(INTL_RELEASE_ROOT "${GLIB_RELEASE_ROOT}")
		set(INTL_DEBUG_ROOT "${GLIB_DEBUG_ROOT}")
		if (NOT EXISTS "${INTL_INCLUDE_DIR}" OR NOT EXISTS "${INTL_RELEASE_ROOT}" OR NOT EXISTS "${INTL_DEBUG_ROOT}")
			set(WINDOWS_OK FALSE)
		endif()
	endif()	
	if (NOT EXISTS "${CURL_INCLUDE_DIR}" OR NOT EXISTS "${CURL_RELEASE_ROOT}" OR NOT EXISTS "${CURL_DEBUG_ROOT}"
		OR NOT EXISTS "${FFMPEG_INCLUDE_DIR}" OR NOT EXISTS "${FFMPEG_RELEASE_ROOT}" OR NOT EXISTS "${FFMPEG_DEBUG_ROOT}"
		OR NOT EXISTS "${GLIB_INCLUDE_DIR}" OR NOT EXISTS "${GLIB_RELEASE_ROOT}" OR NOT EXISTS "${GLIB_DEBUG_ROOT}"
		OR NOT EXISTS "${NLOHMANN_INCLUDE_DIR}" 
		OR NOT EXISTS "${OPENSSL_INCLUDE_DIR}" OR NOT EXISTS "${OPENSSL_RELEASE_ROOT}" OR NOT EXISTS "${OPENSSL_DEBUG_ROOT}"
		OR NOT EXISTS "${OPUS_INCLUDE_DIR}" OR NOT EXISTS "${OPUS_RELEASE_ROOT}" OR NOT EXISTS "${OPUS_DEBUG_ROOT}"
		OR NOT EXISTS "${SODIUM_INCLUDE_DIR}" OR NOT EXISTS "${SODIUM_RELEASE_ROOT}" OR NOT EXISTS "${SODIUM_DEBUG_ROOT}" OR NOT LINUX_OK OR NOT WINDOWS_OK)
		
		message(FATAL_ERROR "Sorry - but please set the _DEBUG_ROOT, _RELEASE_ROOT AND _INCLUDE_DIR values in CMakeLists.txt!")
	endif()
elseif(EXISTS "${_VCPKG_ROOT_DIR}")		
	set(VCPKG_BASE_DIR "${_VCPKG_ROOT_DIR}/installed")
	string(TOLOWER "${CMAKE_HOST_SYSTEM_NAME}" OS_NAME)
	set(VCPKG_INSTALLED_DIR "${VCPKG_BASE_DIR}/x64-${OS_NAME}")
	set(CURL_INCLUDE_DIR "${VCPKG_INSTALLED_DIR}/include")
	set(CURL_RELEASE_ROOT "${VCPKG_INSTALLED_DIR}/lib")
	set(CURL_DEBUG_ROOT "${VCPKG_INSTALLED_DIR}/debug/lib")
	set(FFMPEG_INCLUDE_DIR "${VCPKG_INSTALLED_DIR}/include")
	set(FFMPEG_RELEASE_ROOT "${VCPKG_INSTALLED_DIR}/lib")
	set(FFMPEG_DEBUG_ROOT "${VCPKG_INSTALLED_DIR}/debug/lib")
	set(GLIB_INCLUDE_DIR "${VCPKG_INSTALLED_DIR}/include")
	set(GLIB_RELEASE_ROOT "${VCPKG_INSTALLED_DIR}/lib")
	set(GLIB_DEBUG_ROOT "${VCPKG_INSTALLED_DIR}/debug/lib")
	set(INTL_INCLUDE_DIR "${GLIB_INCLUDE_DIR}")
	set(INTL_RELEASE_ROOT "${GLIB_RELEASE_ROOT}")
	set(INTL_DEBUG_ROOT "${GLIB_DEBUG_ROOT}")
	set(LIBZ_INCLUDE_DIR "${CURL_INCLUDE_DIR}")
	set(LIBZ_RELEASE_ROOT "${CURL_RELEASE_ROOT}")
	set(LIBZ_DEBUG_ROOT "${CURL_DEBUG_ROOT}")
	set(NLOHMANN_INCLUDE_DIR "${VCPKG_INSTALLED_DIR}/include")
	set(OPENSSL_INCLUDE_DIR "${VCPKG_INSTALLED_DIR}/include")
	set(OPENSSL_RELEASE_ROOT "${VCPKG_INSTALLED_DIR}/lib")
	set(OPENSSL_DEBUG_ROOT "${VCPKG_INSTALLED_DIR}/debug/lib")
	set(OPUS_INCLUDE_DIR "${VCPKG_INSTALLED_DIR}/include")
	set(OPUS_RELEASE_ROOT "${VCPKG_INSTALLED_DIR}/lib")
	set(OPUS_DEBUG_ROOT "${VCPKG_INSTALLED_DIR}/debug/lib")
	set(SODIUM_INCLUDE_DIR "${VCPKG_INSTALLED_DIR}/include")
	set(SODIUM_RELEASE_ROOT "${VCPKG_INSTALLED_DIR}/lib")
	set(SODIUM_DEBUG_ROOT "${VCPKG_INSTALLED_DIR}/debug/lib")
endif()

add_subdirectory(Library)
